{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ember-routes/tests/lint/app.lint-test.js","ember-routes/tests/lint/templates.template.lint-test.js","ember-routes/tests/lint/tests.lint-test.js","ember-routes/tests/test-helper.js","ember-routes/tests/unit/routes/org-test.js","ember-routes/tests/unit/routes/org/repo-test.js","ember-routes/tests/unit/routes/org/repo/contributors-test.js","ember-routes/tests/unit/routes/org/repo/issues-test.js","ember-routes/tests/unit/routes/org/repos-test.js","ember-routes/tests/unit/routes/orgs-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"ember-routes/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/org.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/org.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/org/repo.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/org/repo.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/org/repo/contributors.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/org/repo/contributors.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/org/repo/issues.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/org/repo/issues.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/org/repos.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/org/repos.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/orgs.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/orgs.js should pass ESLint\\n\\n');\n  });\n});","define(\"ember-routes/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('ember-routes/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-routes/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-routes/templates/org.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-routes/templates/org.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-routes/templates/org/repo.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-routes/templates/org/repo.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-routes/templates/org/repo/contributors.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-routes/templates/org/repo/contributors.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-routes/templates/org/repo/issues.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-routes/templates/org/repo/issues.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-routes/templates/org/repos.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-routes/templates/org/repos.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ember-routes/templates/orgs.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ember-routes/templates/orgs.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"ember-routes/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/org-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/org/repo-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/repo-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/org/repo/contributors-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/repo/contributors-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/org/repo/issues-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/repo/issues-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/org/repos-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/repos-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/orgs-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/orgs-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"ember-routes/tests/test-helper\", [\"ember-routes/app\", \"ember-routes/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"ember-routes/tests/unit/routes/org-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | org', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:org');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-routes/tests/unit/routes/org/repo-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | org/repo', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:org/repo');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-routes/tests/unit/routes/org/repo/contributors-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | org/repo/contributors', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:org/repo/contributors');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-routes/tests/unit/routes/org/repo/issues-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | org/repo/issues', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:org/repo/issues');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-routes/tests/unit/routes/org/repos-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | org/repos', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:org/repos');\n      assert.ok(route);\n    });\n  });\n});","define(\"ember-routes/tests/unit/routes/orgs-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | orgs', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:orgs');\n      assert.ok(route);\n    });\n  });\n});","define('ember-routes/config/environment', [], function() {\n  var prefix = 'ember-routes';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('ember-routes/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}